{% if GIT_DESCRIBE_NUMBER > '0' %}
{% set GIT_VERSION = GIT_DESCRIBE_TAG[1:] + '.post' + GIT_DESCRIBE_NUMBER %}
{% else %}
{% set GIT_VERSION = GIT_DESCRIBE_TAG[1:] %}
{% endif %}
{% set PKG_NAME = 'nanopb-helpers' %}
{% set MODULE_NAME = PKG_NAME.replace('-', '_') %}
{% set LIB_NAME = 'nanopb' %}
package:
  name: {{ PKG_NAME }}
  version: {{ GIT_VERSION }}

build:
  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  number: 0
  noarch: python
  script:
    # Copy `nanopb-helpers` C source and headers to Conda include directory.
    - python file_handler.py {{ SRC_DIR }} {{ PREFIX }} {{ PKG_NAME }} {{ MODULE_NAME }} {{ LIB_NAME }}
    # Run setup
    - python setup.py install --single-version-externally-managed --record record.txt

requirements:
  build:
    - python {{ python }}
    - nanopb ==0.3.9.8
    - path-helpers
    - conda-helpers
    - platformio-helpers
    - pip

outputs:
  - name: {{ PKG_NAME }}-dev
    noarch: generic
    files:
      - share
    run:
      - nanopb ==0.3.9.8
  - name: {{ PKG_NAME }}
    noarch: python
    files:
      - {{ SP_DIR }}/{{ MODULE_NAME }}
    requirements:
      run:
        - python >=3.6
        - {{ pin_subpackage(PKG_NAME + '-dev', max_pin='x.x') }}
        - nanopb ==0.3.9.8
        - path-helpers
        - conda-helpers
        - platformio-helpers
        - pip

test:
  imports:
    - {{ MODULE_NAME }}

about:
  home: https://github.com/sci-bots/nanopb-helpers
  license: BSD-3
  summary: Cross-platform Python API for `nanopb`

source:
#  git_url: ../
  path: ..